Build a Prop Firm Ranking Website (Next.js + Postgres)
Goal

Create a prop firm ranking site similar to propfirmmatch.com/best-sellers?type=all or propkorea.com that lists firms, account sizes, prices, discounts with due dates, and allows users to sort/filter. Each firm has a detailed page with rules. Include my referral coupon codes and direct referral links. The site must be SEO-optimized, multi-language (Korean/English/Japanese/Hindi), and backed by PostgreSQL so I can later automate updates with Airflow.

Tech & Architecture

Frontend/Fullstack: Next.js (App Router, server components where useful), TypeScript, Tailwind CSS.

SEO: next-seo (or equivalent), full meta tags, OpenGraph/Twitter cards, JSON-LD structured data, sitemap.xml, robots.txt, canonical URLs, hreflang.

i18n: next-intl or next-i18next with ko, en, ja, hi locales; localized routes (/ko, /en, /ja, /hi) and localized metadata.

Data Layer: PostgreSQL + Prisma ORM (preferred) or Drizzle. Run migrations.

API: Next.js Route Handlers under /api/* (REST) ready for ingestion from Airflow.

Auth (Admin only): Simple admin login (NextAuth or basic email+password) for CRUD on firms and promotions. Public pages are unauthenticated.

Deployment: Vercel-friendly (Edge where fits), image optimization. Use ISR/SSG for lists and firm detail pages with revalidation.

Testing: Basic unit tests (Jest) and a couple of Playwright E2E tests for critical flows (sorting, locale switching).

Core Features

Ranking/Listing Page

Grid/table of prop firms and their account sizes.

Columns: Firm, Account Size (e.g., $10k, $25k, $50k, $100k...), Base Price, Discounted Price, Discount %, Discount Due Date (show countdown), Earliest Payout (days), Payout Model (e.g., 80/20), Rating (optional).

Sorting: by Price (asc/desc), Discount % (desc), Earliest Payout (asc), Popularity/Rating, and any future metric.

Filters: account sizes (checkboxes), payout schemes, platforms, country restrictions (optional).

Each row/card shows a “Go with Referral” button using my referral link + coupon code visibly shown.

Pagination or infinite load; preserve sort/filter state in query params for SEO (e.g., ?sort=discount_desc&size=50k).

Firm Detail Page

SEO-friendly route: /[locale]/firms/[slug].

Sections:

Hero: Firm logo, name, quick KPIs (payout split, earliest payout, platforms).

Rules (clear bullets): daily/max drawdown, profit targets, scaling, news trading rules, weekend holding, evaluation phases, etc.

Accounts & Pricing table: sizes, base price, current discount, final price, discount end date/time (+ countdown).

Referral section: shows my coupon code and primary referral link (CTA button).

FAQs and Pros/Cons (optional).

Internal linking back to ranking with selected filters. Localized content.

Referral Integration

Store my coupon codes per firm and render them prominently.

All “Buy” buttons use my referral tracking links with UTM params. Open in new tab.

Internationalization

All UI text translatable. Provide base translation files for ko, en, ja, hi.

Localized URLs + hreflang tags. Localized structured data (where feasible).

Date/time formatting and currency formatting per locale (but store canonical in DB).

Data Model (Postgres)
Use Prisma models like below (adjust as needed):

model Firm {
  id              String   @id @default(cuid())
  name            String
  slug            String   @unique
  websiteUrl      String
  logoUrl         String?
  earliestPayoutDays Int?   // for sorting
  payoutSplit     String?   // e.g., "80/20"
  platforms       String[]  // e.g., ["MetaTrader5","cTrader"]
  countryNotes    String?   // restrictions
  rating          Float?    // optional

  referralLink    String?   // my referral URL
  couponCode      String?   // my coupon code

  // Localized fields (optional separate table if heavy):
  description_en  String?
  description_ko  String?
  description_ja  String?
  description_hi  String?

  accounts        Account[] // relation
  promotions      Promotion[] // relation

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id          String  @id @default(cuid())
  firmId      String
  firm        Firm    @relation(fields: [firmId], references: [id])
  sizeUsd     Int     // 10000, 25000, etc.
  basePrice   Decimal // canonical
  currency    String  // "USD"

  // denormalized helpers for fast sort (optional)
  earliestPayoutDays Int?
  payoutSplit        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  prices      AccountPrice[] // historical prices if needed
}

model Promotion {
  id            String   @id @default(cuid())
  firmId        String
  firm          Firm     @relation(fields: [firmId], references: [id])
  title         String
  discountPct   Float    // 0-100
  startsAt      DateTime?
  endsAt        DateTime // discount due date
  couponCode    String?  // if different than default
  landingUrl    String?  // promo-specific referral link

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AccountPrice {
  id         String   @id @default(cuid())
  accountId  String
  account    Account  @relation(fields: [accountId], references: [id])
  price      Decimal
  effectiveAt DateTime @default(now())
}


APIs

GET /api/firms?locale=&sort=&size=&minDiscount=&maxPayoutDays= → paginated list with computed finalPrice, discountPct, and countdown (server-side).

GET /api/firms/[slug]?locale= → firm details with rules, accounts, current promotions.

POST /api/admin/firms / PUT /api/admin/firms/[id] / DELETE ...

POST /api/admin/promotions / PUT /api/admin/promotions/[id] / DELETE ...

Responses include cache headers to support ISR.

Admin CMS (lightweight)

Protected route /admin to CRUD:

Firms (name, slug, website, logo, payout info, platforms)

Accounts (sizes, base price)

Promotions (discount %, start/end dates, coupon code, landing URL)

Referral defaults (per firm)

CSV upload for bulk account sizes/prices (optional).

Validation for promotion windows (end date > now).

SEO Requirements

Unique meta titles/descriptions per locale.

JSON-LD:

Listing: ItemList with ListItems for firms.

Firm page: Organization + Offer/AggregateOffer for account/pricing where applicable.

sitemap.xml including all locales; robots.txt.

Canonicals and hreflang pairs across locales.

Prefetch internal routes, lazy-load images, meaningful LCP element, no CLS issues.

UI/UX

Clean, modern, mobile-first. Tailwind with accessible components.

Listing view: sticky filter/sort bar; show countdown badge for promotions (hh:mm:ss if ending < 48h, otherwise days).

Detail view: structured rule tables (Daily DD, Max DD, Targets, Profit Split, Min Trading Days, News/Weekend rules, Scaling plan).

Buttons: “Copy Coupon” (clipboard) and “Go with Referral”.

Persist user’s last sort/filter in localStorage and URL (SSR must still render from query params).

Performance & Accessibility

Lighthouse targets: ≥95 Performance, ≥95 SEO, ≥90 Accessibility.

Image optimization, route-level caching, ISR revalidate (e.g., 6–12h) with on-demand revalidation webhook for Airflow.

Semantic HTML, keyboard nav, proper aria labels.

Airflow Integration Ready

Provide a simple ingestion contract for Airflow:

Airflow pushes JSON to POST /api/admin/promotions/sync and POST /api/admin/accounts/sync with an HMAC header (shared secret).

API validates and upserts firms, accounts, and promotions. Return per-record status.

Include example JSON payloads & a minimal Python snippet (requests) in the repo docs.

Configs & Secrets

.env for DATABASE_URL, NEXTAUTH_SECRET (if used), AIRFLOW_HMAC_SECRET.

Prisma migrations + seed script with a few example firms/accounts/promos.

Initial Content

Seed 3–5 sample firms with 3–4 account sizes each and 1-2 active promotions with realistic due dates, coupon codes, and referral links.

Placeholder for my coupon codes and referral links:

Default coupon: {{MY_COUPON_CODE}}

Default referral link: {{MY_REFERRAL_URL}}

Deliverables

Ready-to-run Next.js app with:

/[locale]/ ranking page with full sort/filter.

/[locale]/firms/[slug] firm details with rules and referral CTAs.

Admin panel /admin (basic).

Postgres schema & migrations; Prisma client; seed.

i18n setup with base translations for ko/en/ja/hi.

SEO (next-seo config), sitemap/robots/hreflang, JSON-LD.

Example Airflow sync endpoints + docs.

Basic tests (Jest + Playwright) for sorting and locale routing.

Acceptance Criteria

Sorting by Price, Discount %, Earliest Payout works and is reflected in the URL and SSR output.

Promotions show accurate countdown and final price (base − discount).

Each firm page shows clear rules and working referral CTA with visible coupon.

All four locales render, with correct hreflang and localized metadata.

Sitemap includes all localized routes; Lighthouse meets targets.

Data persists in Postgres; Admin CRUD works; Sync endpoints upsert correctly.

Notes for the implementer

Use ISR for lists/details (revalidate: 21600) and an on-demand revalidation API for Airflow.

Prefer server-side sorting/filtering for consistent SEO and shareable URLs.

Add rel="nofollow sponsored" to outbound referral links.

Validate promotion windows and guard against overlapping promos.